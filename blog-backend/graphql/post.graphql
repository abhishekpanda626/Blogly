extend type Query{
    posts: [Post]! @all 
    post(
      "Search by primary key."
        id: ID @eq 
      title: String @eq
    ): Post   @find @guard(with: ["api"])
}
type Post{
    id:ID!
    title:String!
    content: String!
    user_id:ID!
    file_path:String
    author: User @belongsTo 
  comment: [Comment!] @hasMany
}
input PostInput{
    title:String! @rules(apply:["required","min:3"],messages:[{rule:"required" message:"How can you leave that blank?You just can't."}{rule:"min" message:"Minimum 3 characters are required"}]) 
    content:String! @rules(apply:["required","min:3"],messages:[{rule:"required" message:"Are you sure you don't have anything in mind.Come'on think harder"}{rule:"min" message:"Minimum 3 characters are required"}])
    user_id: ID!
}
extend type Mutation{
    createPost(input: PostInput @spread):Post @create  @guard(with: ["api"])
    updatePost(id:ID! title:String content:String ):Post @update  @guard(with: ["api"])
    deletePost(id:ID!):Post @delete  @guard(with: ["api"])
    uploadPost(file_path: Upload! id:ID!): Post
}